diff --git a/chrome/browser/ui/views/tabs/tab_style_views.cc b/chrome/browser/ui/views/tabs/tab_style_views.cc
index 221f622b254da49d3252236967064a7eb18cb9db..30a68e42b930cffbc7498129e064d82d6bb9dc70 100644
--- a/chrome/browser/ui/views/tabs/tab_style_views.cc
+++ b/chrome/browser/ui/views/tabs/tab_style_views.cc
@@ -112,6 +112,7 @@ class GM2TabStyle : public TabStyleViews {
   virtual int GetStrokeThickness(bool should_paint_as_active = false) const;
 
  private:
+  BRAVE_GM2_TAB_STYLE_H
   // Gets the bounds for the leading and trailing separators for a tab.
   SeparatorBounds GetSeparatorBounds(float scale) const;
 
@@ -284,6 +285,7 @@ SkPath GM2TabStyle::GetPath(PathType path_type,
   const ShapeModifier shape_modifier = GetShapeModifier(path_type);
   const bool extend_left_to_bottom = shape_modifier & kNoLowerLeftArc;
   const bool extend_right_to_bottom = shape_modifier & kNoLowerRightArc;
+  bottom_radius = 0;
 
   SkPath path;
 
@@ -559,7 +561,7 @@ TabStyle::SeparatorBounds GM2TabStyle::GetSeparatorBounds(float scale) const {
   separator_bounds.leading =
       gfx::RectF(aligned_bounds.x() + corner_radius,
                  aligned_bounds.y() +
-                     (aligned_bounds.height() - separator_size.height()) / 2,
+                     aligned_bounds.height() - separator_size.height(),
                  separator_size.width(), separator_size.height());
 
   separator_bounds.trailing = separator_bounds.leading;
@@ -920,12 +922,16 @@ void GM2TabStyle::PaintSeparators(gfx::Canvas* canvas) const {
                                                    SK_AlphaOPAQUE));
   };
 
+  // Even if |separator_radius| becomes 1 native pixel the 'roundedness'
+  // will be approximated with color, although extremely subtle and
+  // likely only on screens >= 2x (i.e. separator width is 2+px)!
+  const int separator_radius =  separator_bounds.leading.width() / 2;
   cc::PaintFlags flags;
   flags.setAntiAlias(true);
   flags.setColor(separator_color(separator_opacities.left));
-  canvas->DrawRect(separator_bounds.leading, flags);
+  canvas->DrawRoundRect(separator_bounds.leading, separator_radius, flags);
   flags.setColor(separator_color(separator_opacities.right));
-  canvas->DrawRect(separator_bounds.trailing, flags);
+  canvas->DrawRoundRect(separator_bounds.trailing, separator_radius, flags);
 }
 
 // static
